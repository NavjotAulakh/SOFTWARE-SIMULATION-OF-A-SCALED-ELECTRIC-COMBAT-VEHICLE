bot:
  joint_state_controller:
    type: "joint_state_controller/JointStateController"
    publish_rate: 50

  left_wheel_0_joint:
    type: velocity_controllers/JointVelocityController
    joint: left_wheel_0_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  left_wheel_1_joint:
    type: velocity_controllers/JointVelocityController
    joint: left_wheel_1_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  left_wheel_2_joint:
    type: velocity_controllers/JointVelocityController
    joint: left_wheel_2_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  left_wheel_3_joint:
    type: velocity_controllers/JointVelocityController
    joint: left_wheel_3_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  right_wheel_0_joint:
    type: velocity_controllers/JointVelocityController
    joint: right_wheel_0_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  right_wheel_1_joint:
    type: velocity_controllers/JointVelocityController
    joint: right_wheel_1_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  right_wheel_2_joint:
    type: velocity_controllers/JointVelocityController
    joint: right_wheel_2_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}

  right_wheel_3_joint:
    type: velocity_controllers/JointVelocityController
    joint: right_wheel_3_joint
    pid: {p: 100.0, i: 0.01, d: 1.0}


joint_state_controller:
    type: "joint_state_controller/JointStateController"
    publish_rate: 50

bot_velocity_controller:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: ['left_wheel_0_link', 'left_wheel_1_link', 'left_wheel_2_link', 'left_wheel_3_link']
  right_wheel: ['right_wheel_0_link', 'right_wheel_1_link', 'right_wheel_2_link', 'right_wheel_3_link']
  publish_rate: 50
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]

  cmd_vel_timeout: 0.55

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.8 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 30.0   # m/s
      has_acceleration_limits: true
      max_acceleration       : 20.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 5.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 25.0   # rad/s^2

  cmd_vel_timeout: 0.55

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.8 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 30.0   # m/s
      has_acceleration_limits: true
      max_acceleration       : 20.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 5.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 25.0   # rad/s^2

